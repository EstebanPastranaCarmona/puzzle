<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AACABAAAL+IAAIAAQAD/8kAA//1AAP//QAA=
</value>
  </data>
</root>